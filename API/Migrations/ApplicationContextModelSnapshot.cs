// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Models.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeOfWork")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "просп. Ленина, 20А",
                            Menu = "https://vk.com/doc792294115_687636926",
                            Name = "Негодяи",
                            Photo = "https://img.restoclub.ru/uploads/place/0/9/8/e/098e561454ac4d89aa8c755e0d181c55_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://negodyai.com/",
                            TimeOfWork = "будни: 12.00 - 03.00; выходные: 12.00 - 06.00"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ул. Малышева, 21/4",
                            Menu = "https://nelsonsauvin.ru/#menu",
                            Name = "Нельсон Совин",
                            Photo = "https://img.restoclub.ru/uploads/place/9/6/4/e/964e95990e6af781ce000062ba85b374_w426_h278.jpg",
                            Rating = 0,
                            Site = "https://nelsonsauvin.ru/",
                            TimeOfWork = "будни: 14.00 - 00.00; выходные: 14.00 - 02.00"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ул. Хохрякова, 3а",
                            Menu = "https://tomesto.ru/ekaterinburg/places/besy",
                            Name = "Бесы",
                            Photo = "https://scdn.tomesto.ru/img/place/000/030/109/gastrobar-besy-na-ulitse-hohryakova_df0cf_full-272101.jpg",
                            Rating = 0,
                            Site = "https://tomesto.ru/ekaterinburg/places/besy",
                            TimeOfWork = "будни: 12.00 - 00.00; выходные: 12.00 - 02.00"
                        },
                        new
                        {
                            Id = 4,
                            Address = "ул. Вайнера, 9а",
                            Menu = "https://killfish.ru/menu.html",
                            Name = "KILLFISH",
                            Photo = "https://img.restoclub.ru/uploads/place/e/b/8/1/eb818ba8605995f2aad10136b0c93eec_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://killfish.ru/#",
                            TimeOfWork = "будни и вс: 14.00 - 02.00; пт-сб: 14.00 - 03.00"
                        },
                        new
                        {
                            Id = 5,
                            Address = "ул. Малышева, 29",
                            Menu = "https://killfish.ru/menu.html",
                            Name = "Мам я в хлам",
                            Photo = "https://img.restoclub.ru/uploads/place/a/3/3/a/a33a7fa1db085b661b4c93fb4732884e_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://killfish.ru/#",
                            TimeOfWork = "будни и вс: 11.00 - 00.00; пт-сб: 11.00 - 02.00"
                        },
                        new
                        {
                            Id = 6,
                            Address = "ул. 8 Марта, 8Г",
                            Menu = "https://klktv91.ru/menu",
                            Name = "Коллектив",
                            Photo = "https://img.restoclub.ru/uploads/place/3/4/f/a/34fa1dbea0f0b5d0bc0bede66b723f26_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://klktv91.ru/",
                            TimeOfWork = "будни и вс: 18.00 - 02.00; пт-сб: 18.00 - 04.00"
                        },
                        new
                        {
                            Id = 7,
                            Address = "ул. 8 Марта, 31",
                            Menu = "https://polki-centr.ru/price/",
                            Name = "Полки LOUNGE",
                            Photo = "https://p0.zoon.ru/b/a/5bb5e429a4b0310a5f52870c_669dfb414c3ee6.11034042.jpg",
                            Rating = 0,
                            Site = "https://polki-centr.ru/?utm_source=gmb",
                            TimeOfWork = "все дни 12.00 - 02.00"
                        },
                        new
                        {
                            Id = 8,
                            Address = "ул. 8 Марта, 31в",
                            Menu = "https://theoutbar.ru/menu",
                            Name = "Караоке THE OUT BAR",
                            Photo = "https://img.restoclub.ru/uploads/place/c/e/5/5/ce5550b6d4a2841d57df1255b3043b2e_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://theoutbar.ru/",
                            TimeOfWork = "ср-чт: 19.00 - 02.00, пт-сб: 19.00 - 05.00"
                        },
                        new
                        {
                            Id = 9,
                            Address = "ул. Малышева, 29А",
                            Menu = "http://samocvet.ekb.tilda.ws/#menu",
                            Name = "Самоцвет",
                            Photo = "https://img.restoclub.ru/uploads/place/b/f/d/c/bfdc1a82fe52ec1c1730983f58ae0d0a_w470.jpg",
                            Rating = 0,
                            Site = "http://samocvet.ekb.tilda.ws/",
                            TimeOfWork = "будни: 17.00 - 02.00; выходные: 15.00 - 06.00"
                        },
                        new
                        {
                            Id = 10,
                            Address = "ул. Малышева, 19",
                            Menu = "https://vk.com/doc1473743_673529194?hash=TVz29uze1pOgq4GJrqZcNw3tz4qefoQvzW09fXHgER0&dl=lJjDd3sWQviO9DpszKzAGB0GL75kTyFpsks90YThXKT",
                            Name = "Здоровье",
                            Photo = "https://img.restoclub.ru/uploads/place/5/5/d/a/55dae2173d7cd2b48378d2377f800edc_w470.jpg",
                            Rating = 0,
                            Site = "",
                            TimeOfWork = "будни и вс: 16.00 - 02.00; пт-сб: 16.00 - 04.00"
                        },
                        new
                        {
                            Id = 11,
                            Address = "ул. Розы Люксембург, 14",
                            Menu = "https://vk.com/bar.stavnikov?z=album-205091375_303719416",
                            Name = "Ставников",
                            Photo = "https://img.restoclub.ru/uploads/place/3/f/3/b/3f3ba52891c1577ad7f3f3c06e9d2105_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://vk.com/bar.stavnikov",
                            TimeOfWork = "пн-чт: 12.00 - 02.00; пт: 12.00 - 04.00; сб: 16.00 - 04.00, вс: 16.00 - 02.00"
                        },
                        new
                        {
                            Id = 12,
                            Address = "просп. Ленина, 49",
                            Menu = "https://grottbar.ru/menu",
                            Name = "Гротт Бар",
                            Photo = "https://img.restoclub.ru/uploads/place/d/d/8/c/dd8c1dddd95de76e486d6e19a0f15515_w1230_h820--no-cut.webp?v=3",
                            Rating = 0,
                            Site = "https://grottbar.ru/",
                            TimeOfWork = "будни и вс: 12.00 - 00.00; пт-сб: 12.00 - 03.00"
                        });
                });

            modelBuilder.Entity("API.Models.Favorite", b =>
                {
                    b.Property<int>("FavId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FavId"));

                    b.Property<int>("BarId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FavId");

                    b.HasIndex("BarId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("API.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "веселый"
                        },
                        new
                        {
                            Id = 2,
                            Name = "есть туалет"
                        });
                });

            modelBuilder.Entity("BarTag", b =>
                {
                    b.Property<int>("BarsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("BarsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("BarTag");
                });

            modelBuilder.Entity("API.Models.Favorite", b =>
                {
                    b.HasOne("API.Models.Bar", "Bar")
                        .WithMany("FavoritedByUsers")
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.AppUser", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarTag", b =>
                {
                    b.HasOne("API.Models.Bar", null)
                        .WithMany()
                        .HasForeignKey("BarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.AppUser", b =>
                {
                    b.Navigation("Favorites");
                });

            modelBuilder.Entity("API.Models.Bar", b =>
                {
                    b.Navigation("FavoritedByUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
