version: "3.9"
services:
  postgres:
    container_name: postgres_container_to_cocktaility
    image: postgres:17.2
    environment:
      POSTGRES_DB: "CockDB"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ifconfigroute-n
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=ru-RU"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d CockDB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
  
  pgadmin:
    container_name: pgadmin_container_to_cocktaility
    image: dpage/pgadmin4:8.13
    environment:
      PGADMIN_DEFAULT_EMAIL: "holimilk@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "ifconfigroute-n"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres
  
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:5184"
      DB_CONNECTION_STRING: "Host=postgres;Database=CockDB;Username=postgres;Password=ifconfigroute-n"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5184:5184"
    networks:
      - postgres

volumes:
  postgres_data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge